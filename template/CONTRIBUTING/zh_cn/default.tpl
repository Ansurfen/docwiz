# 为我们的项目做出贡献 🚀

[English]() | 简体中文

感谢您考虑为我们的项目做出贡献！🙌 我们很高兴您的加入，并感谢您的帮助。您将在下面找到为此项目做出贡献的指南。

## 如何贡献 💻

您可以通过多种方式为项目做出贡献：

1. **报告Bug** 🐞  
   如果您遇到错误，请在 GitHub 上打开一个问题。请务必提供尽可能多的详细信息，以帮助我们了解问题。

2. **建议功能** 💡  
   对新功能或改进有想法？请打开一个问题并描述您的建议。我们很乐意听取您的意见！

3. **提交代码** 🧑‍💻  
   如果您对编写代码感兴趣，请按照以下步骤作：

   - **克隆仓库**  
     首先，将仓库克隆到本地计算机： 
     `git clone https://github.com/{{.ProjectOwner | default "<!-- projectOwner -->"| unescape}}/{{.ProjectName | default "<!-- projectOwner -->" | unescape}}.git`
     
   - **Fork 和创建一个新的分支**  
     Fork 仓库并为您的功能或修复创建新分支：
     `git checkout -b feature/my-feature`
   
   - **进行更改**  
     _描述你所做的改变_

   - **编写测试（可选）** 🧪  
     _根据需要添加单元测试或集成测试。_

   - **运行测试**  
     通过运行测试套件确保所有现有测试都通过： 
     <!-- e.g. `go test ./...` -->

   - **提交更改**  
     提交带有明确消息的更改，并将其推送到你的 fork：  
     `git commit -am "Add my feature"`  
     `git push origin feature/my-feature`

   - **创建 Pull Request**  
     最后，向 `main` 分支提交拉取请求。

4. **改进文档** 📚  
   我们始终欢迎对文档做出贡献！如果您发现错误或不清楚的地方，请随时修复它或提供建议。

## 代码风格 ✨

我们在整个项目中遵循一致的编码风格。请：

- 使用描述性变量和函数名称。
- 将代码行数保持在 80 个字符以下。
<!-- 用项目的语言替换它 -->
<!-- - 遵循 Go 代码格式（使用 'gofmt'） -->
- 确保您的代码通过 linter。

## 测试 🧪

在提交 PR 之前，请确保：

- 在本地运行测试。
- 确保所有测试都通过。
- 为任何新功能或 bug 修复添加测试。

## Pull Request 指引 📩

当您提交拉取请求时，请：

- 在 PR 消息中清楚地描述更改的目的。
- 如果适用，请引用 PR 解决的问题。
- 确保您的 PR 与最新的 `main` 分支保持同步。

## 行为准则 🌟

通过为本项目做出贡献，您同意遵守我们的 [行为准则](CODE_OF_CONDUCT.md)。请善待和尊重他人。我们希望维持一个热情和包容的社区。💖

## 谢谢！ 🎉

我们感谢每一份贡献，无论大小。感谢您成为我们社区的一员！🌍 如果您有任何问题，请随时与我们联系。

祝您编码愉快！🚀
